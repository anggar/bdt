# -*- mode: ruby -*-
# vi: set ft=ruby :


DO_BOX_URL = "https://github.com/devopsgroup-io/vagrant-digitalocean/raw/master/box/digital_ocean.box"
PRIVATE_KEY_PATH = "./id_rsa"
TOKEN = ENV['DO_TOKEN']

Vagrant.configure("2") do |config|
  
  config.ssh.private_key_path = PRIVATE_KEY_PATH

  config.vm.define "mongo-configsvr1" do |droplet|
    droplet.vm.provider :digital_ocean do |provider, override|
      override.vm.box = 'digital_ocean'
      override.vm.box_url = DO_BOX_URL
      override.nfs.functional = false
      override.vm.allowed_synced_folder_types = :rsync
      provider.token = TOKEN
      provider.image = 'ubuntu-18-04-x64'
      provider.region = 'sgp1'
      provider.size = '1gb'
      provider.private_networking = true
    end
    droplet.vm.provision "shell", path: "provision/configserver/cfgsvr1.sh"
  end

  config.vm.define "mongo-configsvr2" do |droplet|
    droplet.vm.provider :digital_ocean do |provider, override|
      override.vm.box = 'digital_ocean'
      override.vm.box_url = DO_BOX_URL
      override.nfs.functional = false
      override.vm.allowed_synced_folder_types = :rsync
      provider.token = TOKEN
      provider.image = 'ubuntu-18-04-x64'
      provider.region = 'sgp1'
      provider.size = '1gb'
      provider.private_networking = true
    end
    droplet.vm.provision "shell", path: "provision/configserver/cfgsvr2.sh"
  end

  config.vm.define "mongo-query-router" do |droplet|
    droplet.vm.provider :digital_ocean do |provider, override|
      override.vm.box = 'digital_ocean'
      override.vm.box_url = DO_BOX_URL
      override.nfs.functional = false
      override.vm.allowed_synced_folder_types = :rsync
      override.vm.provision "shell", path: "provision/query-router/prov.sh"
      provider.token = TOKEN
      provider.image = 'ubuntu-18-04-x64'
      provider.region = 'sgp1'
      provider.size = '1gb'
      provider.private_networking = true
    end
  end

  config.vm.define "mongo-data-shard1" do |droplet|
    droplet.vm.provider :digital_ocean do |provider, override|
      override.vm.box = 'digital_ocean'
      override.vm.box_url = DO_BOX_URL
      override.nfs.functional = false
      override.vm.allowed_synced_folder_types = :rsync
      provider.token = TOKEN
      provider.image = 'ubuntu-18-04-x64'
      provider.region = 'sgp1'
      provider.size = '1gb'
      provider.private_networking = true
    end
    droplet.vm.provision "shell", path: "provision/shard/shard12.sh"
  end

  config.vm.define "mongo-data-shard2" do |droplet|
    droplet.vm.provider :digital_ocean do |provider, override|
      override.vm.box = 'digital_ocean'
      override.vm.box_url = DO_BOX_URL
      override.nfs.functional = false
      override.vm.allowed_synced_folder_types = :rsync
      provider.token = TOKEN
      provider.image = 'ubuntu-18-04-x64'
      provider.region = 'sgp1'
      provider.size = '1gb'
      provider.private_networking = true
    end
    droplet.vm.provision "shell", path: "provision/shard/shard12.sh"
  end

  config.vm.define "mongo-data-shard3" do |droplet|
    droplet.vm.provider :digital_ocean do |provider, override|
      override.vm.box = 'digital_ocean'
      override.vm.box_url = DO_BOX_URL
      override.nfs.functional = false
      override.vm.allowed_synced_folder_types = :rsync
      override.ssh.forward_agent = true
      provider.token = TOKEN
      provider.image = 'ubuntu-18-04-x64'
      provider.region = 'sgp1'
      provider.size = '1gb'
      provider.private_networking = true
    end
    droplet.vm.provision "shell", path: "provision/shard/shard3.sh"
  end

end
